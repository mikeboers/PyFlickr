#!/usr/bin/env python

from fabricate import *

import os

os.chdir(os.path.dirname(os.path.abspath(__file__)))


def local_setup():
    default_key = os.environ.get('PYFLICKR_DEFAULT_KEY', '')
    key = raw_input('Default key [%s]: ' % default_key).strip() or default_key
    default_secret = os.environ.get('PYFLICKR_DEFAULT_SECRET', '')
    secret = raw_input('Default secret [%s]: ' % default_secret).strip() or default_secret
    default_token = os.environ.get('PYFLICKR_DEFAULT_TOKEN', '')
    token = raw_input('Default token [%s]: ' % default_token).strip() or default_token
    open('local_setup', 'w').write((
        'export PYFLICKR_DEFAULT_KEY=%s\n'
        'export PYFLICKR_DEFAULT_SECRET=%s\n'
        'export PYFLICKR_DEFAULT_TOKEN=%s\n'
        ) % (key, secret, token))
    print 'Make sure to `. local_setup`.'

def reflect():
    from flickr import Flickr
    flickr = Flickr()
    methods = flickr('reflection.getMethods')
    for method in methods:
        name = method.text
        print name
        filename = 'methods/%s.xml' % name
        if not os.path.exists(filename) or not open(filename).read(1):
            info = flickr.raw_call('reflection.getMethodInfo', method_name=name)
            open(filename, 'w').write(info)




if __name__ == '__main__':
    main()